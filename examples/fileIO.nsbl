
void findReachableVertices(graph g, vertex v)
{
        vlist l ;
        l=g.allV;
        vertex temp;
        temp = v;
        int no_of_vertices = 0;
        int i = 0;
        foreach(vertex vtemp: l){ vtemp.markT = false;}
        foreach(vertex vt:l)
        {       vlist lv;
                lv <: vt;
                print<<"===================VERTICES REACHABLE FROM: "<<vt.name<<" ======================\n";
                if (!vt.markT)
                {       i=0;
                        while (i < length(lv))
                        {
                                vertex tv= lv[i];
                                print<<"Traversed "<<tv.name<<"\n";
                                elist le = lv|outE;
                                //print<<"test edges\n"<<le;
                                foreach (edge e : le)
                                {
                                        elist le1;
                                        le1 <: e;
                                        vlist lv1 = le1|endV;
                                        //print<<"test vertices\n"<<lv1;
                                        foreach(vertex v1: lv1) {lv <: v1;}
                                        //print<<"test lv\n"<<lv;
                                }
                                i = i + 1;

                        }
                }
        }
	return;
}

void saveGraph(graph g, string loc)
{
        loc << g;
        print<<"The graph provided has been saved in the given location.\n";

	return;
}

graph readGraph(string loc)
{
        graph g;
        loc >> g;
        return g;
}
vertex v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12;
v1.name = "v1";
v2.name = "v2";
v3.name = "v3";
v4.name = "v4";
v5.name = "v5";
v6.name = "v6";
v7.name = "v7";
v8.name = "v8";
v9.name = "v9";
v10.name = "v10";
v11.name = "v11";
v12.name = "v12";

edge e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13,e14,e15,e16,e17,e18,e19,e20,e21,e22,e23,e24,e25,e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65,e66,e67,e68,e69,e70,e71,e72,e73,e74,e75,e76,e77,e78,e79,e80,e81,e82,e83;

elist lle = [e26,e27,e28,e29,e30,e31,e32,e33,e34,e35,e36,e37,e38,e39,e40,e41,e42,e43,e44,e45,e46,e47,e48,e49,e50,e51,e52,e53,e54,e55,e56,e57,e58,e59,e60,e61,e62,e63,e64,e65,e66,e67,e68,e69,e70,e71,e72,e73,e74,e75,e76,e77,e78,e79,e80,e81,e82,e83];


e1:v1->v2;
e2:v1->v3;
e3:v2->v4;
e4:v3->v5;
e5:v1->v6;
e6:v3->v6;
e7:v5->v7;
e8:v7->v8;
e9:v9->v10;
e10:v10->v11;
e11:v9->v11;
e12:v1->v12;
e13:v12->v11;
e14:v1->v9;
e15:v2->v11;
e16:v3->v8;
e17:v5->v12;
e18:v4->v9;
e19:v3->v11;
e20:v4->v12;
e21:v12->v6;
e22:v11->v8;
e23:v7->v4;
e24:v8->v2;
e25:v9->v3;
e26:v1->v3;
e27:v3->v5;
e28:v8->v11;
e29:v10->v1;
e30:v11->v12;
e31:v12->v3;
e32:v1->v5;
e33:v6->v7;
e34:v7->v9;
e35:v1->v5;
e36:v1->v11;
e37:v1->v4;
e38:v1->v5;
e39:v3->v11;
e40:v6->v3;
e41:v2->v3;
e42:v4->v8;
e43:v7->v3;
e44:v7->v1;
e45:v11->v6;
e46:v12->v4;
e47:v12->v11;
e48:v1->v6;
e49:v7->v8;
e50:v2->v5;
e51:v3->v5;
e52:v5->v6;
e53:v7->v9;
e54:v6->v2;
e55:v6->v5;
e56:v6->v9;
e57:v7->v5;
e58:v4->v2;
e59:v3->v2;
e60:v5->v6;
e61:v4->v5;
e62:v6->v9;
e63:v4->v6;
e64:v3->v5;
e65:v6->v7;
e66:v8->v10;
e67:v7->v8;
e68:v4->v7;
e69:v3->v5;
e70:v1->v2;
e71:v12->v1;
e72:v2->v9;
e73:v2->v5;
e74:v3->v8;
e75:v4->v2;
e76:v6->v5;
e77:v5->v12;
e78:v8->v9;
e79:v9->v11;
e80:v1->v6;
e81:v4->v6;
e82:v4->v7;
e83:v5->v1;

e1.name = "e1";
e2.name = "e2";
e3.name = "e3";
e4.name = "e4";
e5.name = "e5";
e6.name = "e6";
e7.name = "e7";
e8.name = "e8";
e9.name = "e9";
e10.name = "e10";
e11.name = "e11";
e12.name = "e12";
e13.name = "e13";
e14.name = "e14";
e15.name = "e15";
e16.name = "e16";
e17.name = "e17";
e18.name = "e18";
e19.name = "e19";
e20.name = "e20";
e21.name = "e21";
e22.name = "e22";
e23.name = "e23";
e24.name = "e24";
e25.name = "e25";
e26.name = "e26";
e27.name = "e27";
e28.name = "e28";
e29.name = "e29";
e30.name = "e30";
e31.name = "e31";
e32.name = "e32";
e33.name = "e33";
e34.name = "e34";
e35.name = "e35";
e36.name = "e36";
e37.name = "e37";
e38.name = "e38";
e39.name = "e39";
e40.name = "e40";
e41.name = "e41";
e42.name = "e42";
e43.name = "e43";
e44.name = "e44";
e45.name = "e45";
e46.name = "e46";
e47.name = "e47";
e48.name = "e48";
e49.name = "e49";
e50.name = "e50";
e51.name = "e51";
e52.name = "e52";
e53.name = "e53";
e54.name = "e54";
e55.name = "e55";
e56.name = "e56";
e57.name = "e57";
e58.name = "e58";
e59.name = "e59";
e60.name = "e60";
e61.name = "e61";
e62.name = "e62";
e63.name = "e63";
e64.name = "e64";
e65.name = "e65";
e66.name = "e66";
e66.name = "e66";
e67.name = "e67";
e68.name = "e68";
e69.name = "e69";
e70.name = "e70";
e71.name = "e71";
e72.name = "e72";
//e72.name = "e72";
e73.name = "e73";
e74.name = "e74";
e75.name = "e75";
e76.name = "e76";
e77.name = "e77";
e78.name = "e78";
e79.name = "e79";
e80.name = "e80";
e81.name = "e81";
e82.name = "e82";
e83.name = "e83";
graph g;

g <: v1;
g <: v2;
g <: v3;
g <: v4;
g <: v5;
g <: v6;
g <: v7;
g <: v8;
g <: v9;
g <: v10;
g <: v11;
g <: v12;


g <: e1;
g <: e2;
g <: e3;
g <: e4;
g <: e5;
g <: e6;
g <: e7;
g <: e8;
g <: e9;
g <: e10;
g <: e11;
g <: e12;
g <: e13;
g <: e14;
g <: e15;
g <: e16;
g <: e17;
g <: e18;
g <: e19;
g <: e20;
g <: e21;
g <: e22;
g <: e23;
g <: e24;
g <: e25;
g <: e26;
g <: e27;
g <: e28;
g <: e29;
g <: e30;
g <: e31;
g <: e32;
g <: e33;
g <: e34;
g <: e35;
g <: e36;
g <: e37;
g <: e38;
g <: e39;
g <: e40;
g <: e41;
g <: e42;
g <: e43;
g <: e44;
g <: e45;
g <: e46;
g <: e47;
g <: e48;
g <: e49;
g <: e50;
g <: e51;
g <: e52;
g <: e53;
g <: e54;
g <: e55;
g <: e56;
g <: e57;
g <: e58;
g <: e59;
g <: e60;
g <: e61;
g <: e62;
g <: e63;
g <: e64;
g <: e65;
g <: e66;
g <: e67;
g <: e68;
g <: e69;

g <: e70;
g <: e71;
g <: e72;
g <: e73;
g <: e74;
g <: e75;
g <: e76;
g <: e77;
g <: e78;
g <: e79;
g <: e80;
g <: e81;
g <: e82;
g <: e83;  

string s = "demo.xml";

int mainFunc(graph g, string s)
{
        //int i;
	//saveGraph(g, s);
	s << g;
	//print<<"Graph saved\n";
        //print<<g;
        graph g1;
	s >> g1;
	//g1 = readGraph(s);
	print<<"Graph read\n";	
        //g1 = readGraph(s);
        //print<<g1;
	elist le = g1.allE;
	foreach(edge e: le)
	{	
		elist ltemp = [e];
		vlist lv1 = ltemp|strtV;
		vertex vtemp = lv1[0];
		vlist lv2 = ltemp|endV;
		vertex vtemp2 = lv2[0];
		print<<e.name<<":"<<vtemp.name<<"--->"<<vtemp2.name<<"\n";
	}
	print<<"\nusing start and end functions\n";
        vlist lv = g1.allV;
        vertex temp1 = lv[0];
        
        vertex temp2 = lv[length(lv) - 1];
        
        //findReachableVertices(g1, temp1);
        //findReachableVertices(g1, temp2);
	return 0;
}
mainFunc(g, s);
